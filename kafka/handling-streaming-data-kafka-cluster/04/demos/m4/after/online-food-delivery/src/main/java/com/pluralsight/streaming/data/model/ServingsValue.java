/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pluralsight.streaming.data.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ServingsValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -33098961619626530L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ServingsValue\",\"namespace\":\"com.pluralsight.streaming.data.model\",\"fields\":[{\"name\":\"deliveryAddress\",\"type\":{\"type\":\"record\",\"name\":\"DeliveryAddress\",\"fields\":[{\"name\":\"street\",\"type\":\"string\"},{\"name\":\"number\",\"type\":\"int\"},{\"name\":\"city\",\"type\":\"string\"}]}},{\"name\":\"servings\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"Serving\",\"fields\":[{\"name\":\"foodType\",\"type\":\"string\"},{\"name\":\"servingStatus\",\"type\":{\"type\":\"enum\",\"name\":\"ServingStatus\",\"symbols\":[\"CREATED\",\"COOKING\",\"DONE\"]}},{\"name\":\"size\",\"type\":\"int\"}]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ServingsValue> ENCODER =
      new BinaryMessageEncoder<ServingsValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ServingsValue> DECODER =
      new BinaryMessageDecoder<ServingsValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ServingsValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ServingsValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ServingsValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ServingsValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ServingsValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ServingsValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ServingsValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ServingsValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.pluralsight.streaming.data.model.DeliveryAddress deliveryAddress;
  @Deprecated public java.util.List<java.lang.Object> servings;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ServingsValue() {}

  /**
   * All-args constructor.
   * @param deliveryAddress The new value for deliveryAddress
   * @param servings The new value for servings
   */
  public ServingsValue(com.pluralsight.streaming.data.model.DeliveryAddress deliveryAddress, java.util.List<java.lang.Object> servings) {
    this.deliveryAddress = deliveryAddress;
    this.servings = servings;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return deliveryAddress;
    case 1: return servings;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: deliveryAddress = (com.pluralsight.streaming.data.model.DeliveryAddress)value$; break;
    case 1: servings = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'deliveryAddress' field.
   * @return The value of the 'deliveryAddress' field.
   */
  public com.pluralsight.streaming.data.model.DeliveryAddress getDeliveryAddress() {
    return deliveryAddress;
  }


  /**
   * Sets the value of the 'deliveryAddress' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(com.pluralsight.streaming.data.model.DeliveryAddress value) {
    this.deliveryAddress = value;
  }

  /**
   * Gets the value of the 'servings' field.
   * @return The value of the 'servings' field.
   */
  public java.util.List<java.lang.Object> getServings() {
    return servings;
  }


  /**
   * Sets the value of the 'servings' field.
   * @param value the value to set.
   */
  public void setServings(java.util.List<java.lang.Object> value) {
    this.servings = value;
  }

  /**
   * Creates a new ServingsValue RecordBuilder.
   * @return A new ServingsValue RecordBuilder
   */
  public static com.pluralsight.streaming.data.model.ServingsValue.Builder newBuilder() {
    return new com.pluralsight.streaming.data.model.ServingsValue.Builder();
  }

  /**
   * Creates a new ServingsValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ServingsValue RecordBuilder
   */
  public static com.pluralsight.streaming.data.model.ServingsValue.Builder newBuilder(com.pluralsight.streaming.data.model.ServingsValue.Builder other) {
    if (other == null) {
      return new com.pluralsight.streaming.data.model.ServingsValue.Builder();
    } else {
      return new com.pluralsight.streaming.data.model.ServingsValue.Builder(other);
    }
  }

  /**
   * Creates a new ServingsValue RecordBuilder by copying an existing ServingsValue instance.
   * @param other The existing instance to copy.
   * @return A new ServingsValue RecordBuilder
   */
  public static com.pluralsight.streaming.data.model.ServingsValue.Builder newBuilder(com.pluralsight.streaming.data.model.ServingsValue other) {
    if (other == null) {
      return new com.pluralsight.streaming.data.model.ServingsValue.Builder();
    } else {
      return new com.pluralsight.streaming.data.model.ServingsValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for ServingsValue instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ServingsValue>
    implements org.apache.avro.data.RecordBuilder<ServingsValue> {

    private com.pluralsight.streaming.data.model.DeliveryAddress deliveryAddress;
    private com.pluralsight.streaming.data.model.DeliveryAddress.Builder deliveryAddressBuilder;
    private java.util.List<java.lang.Object> servings;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pluralsight.streaming.data.model.ServingsValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.deliveryAddress)) {
        this.deliveryAddress = data().deepCopy(fields()[0].schema(), other.deliveryAddress);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasDeliveryAddressBuilder()) {
        this.deliveryAddressBuilder = com.pluralsight.streaming.data.model.DeliveryAddress.newBuilder(other.getDeliveryAddressBuilder());
      }
      if (isValidValue(fields()[1], other.servings)) {
        this.servings = data().deepCopy(fields()[1].schema(), other.servings);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing ServingsValue instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pluralsight.streaming.data.model.ServingsValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.deliveryAddress)) {
        this.deliveryAddress = data().deepCopy(fields()[0].schema(), other.deliveryAddress);
        fieldSetFlags()[0] = true;
      }
      this.deliveryAddressBuilder = null;
      if (isValidValue(fields()[1], other.servings)) {
        this.servings = data().deepCopy(fields()[1].schema(), other.servings);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'deliveryAddress' field.
      * @return The value.
      */
    public com.pluralsight.streaming.data.model.DeliveryAddress getDeliveryAddress() {
      return deliveryAddress;
    }


    /**
      * Sets the value of the 'deliveryAddress' field.
      * @param value The value of 'deliveryAddress'.
      * @return This builder.
      */
    public com.pluralsight.streaming.data.model.ServingsValue.Builder setDeliveryAddress(com.pluralsight.streaming.data.model.DeliveryAddress value) {
      validate(fields()[0], value);
      this.deliveryAddressBuilder = null;
      this.deliveryAddress = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryAddress' field has been set.
      * @return True if the 'deliveryAddress' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'deliveryAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.pluralsight.streaming.data.model.DeliveryAddress.Builder getDeliveryAddressBuilder() {
      if (deliveryAddressBuilder == null) {
        if (hasDeliveryAddress()) {
          setDeliveryAddressBuilder(com.pluralsight.streaming.data.model.DeliveryAddress.newBuilder(deliveryAddress));
        } else {
          setDeliveryAddressBuilder(com.pluralsight.streaming.data.model.DeliveryAddress.newBuilder());
        }
      }
      return deliveryAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'deliveryAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.pluralsight.streaming.data.model.ServingsValue.Builder setDeliveryAddressBuilder(com.pluralsight.streaming.data.model.DeliveryAddress.Builder value) {
      clearDeliveryAddress();
      deliveryAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'deliveryAddress' field has an active Builder instance
     * @return True if the 'deliveryAddress' field has an active Builder instance
     */
    public boolean hasDeliveryAddressBuilder() {
      return deliveryAddressBuilder != null;
    }

    /**
      * Clears the value of the 'deliveryAddress' field.
      * @return This builder.
      */
    public com.pluralsight.streaming.data.model.ServingsValue.Builder clearDeliveryAddress() {
      deliveryAddress = null;
      deliveryAddressBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'servings' field.
      * @return The value.
      */
    public java.util.List<java.lang.Object> getServings() {
      return servings;
    }


    /**
      * Sets the value of the 'servings' field.
      * @param value The value of 'servings'.
      * @return This builder.
      */
    public com.pluralsight.streaming.data.model.ServingsValue.Builder setServings(java.util.List<java.lang.Object> value) {
      validate(fields()[1], value);
      this.servings = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'servings' field has been set.
      * @return True if the 'servings' field has been set, false otherwise.
      */
    public boolean hasServings() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'servings' field.
      * @return This builder.
      */
    public com.pluralsight.streaming.data.model.ServingsValue.Builder clearServings() {
      servings = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ServingsValue build() {
      try {
        ServingsValue record = new ServingsValue();
        if (deliveryAddressBuilder != null) {
          try {
            record.deliveryAddress = this.deliveryAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("deliveryAddress"));
            throw e;
          }
        } else {
          record.deliveryAddress = fieldSetFlags()[0] ? this.deliveryAddress : (com.pluralsight.streaming.data.model.DeliveryAddress) defaultValue(fields()[0]);
        }
        record.servings = fieldSetFlags()[1] ? this.servings : (java.util.List<java.lang.Object>) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ServingsValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<ServingsValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ServingsValue>
    READER$ = (org.apache.avro.io.DatumReader<ServingsValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










